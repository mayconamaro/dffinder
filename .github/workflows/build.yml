name: build
on:
  push:
    paths-ignore:
      - '**.md'

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-10.15, windows-2019]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install stack (MacOS)
        run: curl -sSL https://get.haskellstack.org/ | sh
        if: matrix.os == 'macos-10.15'

      - name: Install stack (Windows)
        run: choco install haskell-stack
        if: matrix.os == 'windows-2019'

      - name: Cache dependencies (Unix)
        uses: actions/cache@v1
        if: matrix.os != 'windows-2019'
        with:
          path: ~/.stack
          key: ${{ runner.os }}-store-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('dffinder.cabal') }}

      - name: Cache dependencies (Windows)
        uses: actions/cache@v1
        if: matrix.os == 'windows-2019'
        with:
          path: 'C:\Users\runneradmin\AppData\Roaming\stack'
          key: ${{ runner.os }}-store-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('dffinder.cabal') }}

      - name: Cache GHC (Windows)
        uses: actions/cache@v1
        if: matrix.os == 'windows-2019'
        with:
          path: 'C:\Users\runneradmin\AppData\Local\Programs\stack'
          key: ghc-${{ hashFiles('stack.yaml.lock') }}

      - name: Build dffinder
        run: stack build

      - name: Package dffinder
        shell: bash
        run: |
          mkdir package
          dir=$(stack path --dist-dir)/build/
          [[ -e "$dir/" ]] && cp "$dir/" package/dffinder
          [[ -e "$dir/dffinder.exe" ]] && cp "$dir/dffinder.exe" package/dffinder.exe
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: dffinder-${{ runner.os }}
          path: package